#!/bin/bash

source functions.sh

rem_repo="untoreh/trees"
ref="trunk"
pkg="borg"
b2_fuse="https://github.com/sondree/b2_fuse"
mgt="https://github.com/megous/megatools"
hbf="https://github.com/TurboGit/hubicfuse"
hbc="http://mir7.ovh.net/ovh-applications/hubic/hubiC-Linux/2.1.0/hubiC-Linux-2.1.0.53-linux.tar.gz"


## init tree
base_tree none

## build app tree
cd ${pkg}
## b2fuse b2(cli)
git clone $b2_fuse b2_fuse
apkc ${PWD} add --update borgbackup python py2-pip py2-yaml fuse
crc pip install fusepy b2
ln -s b2_fuse/b2fuse.py usr/local/bin/b2fuse
chmod +x usr/local/bin/b2fuse
## mega(cli)
install_tools alpine-sdk libressl-dev glib-dev curl-dev asciidoc autoconf automake
apkc ${PWD} add glib curl openrc
cd -
git clone $mgt megatools && cd megatools && ./autogen.sh &&  make 
install -c megadf megadl megaget megals megamkdir megaput megareg megarm megacopy ../${pkg}/usr/local/bin
cd ..
## hubicfuse 
install_tools git alpine-sdk libxml2-dev curl-dev fuse-dev json-c-dev file-dev
apkc ${pkg} add libxml2 json-c file
git clone $hbf hubicfuse && cd hubicfuse && ./configure && make
install -c hubicfuse ../${pkg}/usr/local/bin
cd ..
## hubic(cli)
cat << EOF >>${pkg}/etc/apk/repositories
http://dl-cdn.alpinelinux.org/alpine/edge/testing
EOF
apkc ${pkg} add --update mono make dbus
fetch_artifact $hbc $pkg
crc /bin/sh -c "cd /hubic && make install"
apkc ${pkg} del --purge make
rm -rf ${pkg}/hubic

copy_image_cfg $pkg
wrap_rootfs ${pkg} -c

## pack the tree
package_tree